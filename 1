#include <iostream>
#include <vector>
using namespace std;


vector<double> matrixVectorProduct(const vector<double>& a, const vector<double>& v) {
    int n = v.size();
    vector<double> result(n, 0.0);
    for (int i = 0; i < n; ++i) {
        for (int j = 0; j < n; ++j) {
          
            int index = n - 1 + i - j;
       
            index = (index + 2 * n - 1) % (2 * n - 1); 
            result[i] += a[index] * v[j];
        }
    }
    return result;
}

int main() {

    vector<double> a = {4, 3, 2, 1, 0, 1, 2, 3, 4}; 
    vector<double> v = {1, 2, 3, 4, 5};  // 长度为 n = 5 的向量 v

    vector<double> result = matrixVectorProduct(a, v);


    cout << "矩阵 - 向量乘积结果：";
    for (double val : result) {
        cout << val << " ";
    }
    cout << endl;

    return 0;
}
